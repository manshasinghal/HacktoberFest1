#include <iostream>
#include <map>
#include <unordered_map>
using namespace std;
#include <vector>
int main() {
  //creation
 unordered_map<string , int>m;
  //insertion
  pair<string,int> p =make_pair("mansha" , 2);
  m.insert(p);
  //2nd insert method
  pair<string,int>pair2("man" , 1);
  m.insert(pair2);
    //3rd insert method
  m["meera"]  = 1;
   m["meera"]  = 2;//means we are updating the value of meera

  //search
  cout<<m["meera"]<<endl;
  cout<<m.at("man")<<endl;
  cout<<m["unknown"]<<endl;
  cout<<m.at("unknown")<<endl;
  cout<<m.size()<<endl;

  //check presence
  cout<<m.count("bro");
  //erase
 m.erase("man");
  cout<<m.size()<<endl;

  //traverse map
  for(auto i:m){
    cout<<i.first<<i.second<<endl;
  }

  //iterator
  unordered_map<string,int> ::iterator it = m.begin();
  while(it!=m.end()){
    cout<<it->first<<it->second<<endl;
    it++;
  }
}
int maximumFrequency(vector<int> &arr, int n)
{
    unordered_map<int ,int>count;
    int maxfreq = 0;
    int maxans = 0;
    for(int i = 0 ; i<n ;i++){
        count[arr[i]]++;
        maxfreq = max(maxfreq,count[arr[i]]);

    }
   for(int i = 0 ; i<n ; i++){
       if(maxfreq == count[arr[i]]){
           maxans = arr[i];
           break;
       }
   }
   return maxans;
    }
